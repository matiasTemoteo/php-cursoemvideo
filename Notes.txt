Principais Referências bibliográficas de PHP:

 - Documentação Oficial (php.net)

 - Aprendendo PHP (O'really - David Sklar - php 7)

 - PHP Moderno (O'Really - Josh Lockhart)

 - Programmin PHP (O'Really - Kevin Tatroe & Peter Macintyre - php 7.4) 

 - Learn PHP 8 (Steve Prettyman - php 8)

 - PHP 8 Quick Scripting Reference (Mikael Olsson - php 8)

 - PHP & MYSQL (Jon Duckett)


História:

 - O PHP foi criado em 1994 por Rasmus Lerdorf aos 25 anos
   no Canadá. Rasmus era bastante ativo na comunidade e 
   colaborava constantemente para os projetos do Apache e
   MySql. Rasmus era bem versado na linguabem C e também em
   Pearl. No ano de 1994, ele precisava de uma solução de
   contagem de usuários para o seu site pessoal, assim ele criou
   uma ferramente chamada 'Personal Home Page' que solucionou seu
   problema e acabou fazendo sucesso em sua comunidade.

 - No ano de 1995, Rasmus encapsulou a sua solução e lançou
   sua primeira versão oficialmente como PHP 1.0 (PHP Tools).
   Além das soluções que a sua tecnologia já atendia, ele 
   precisava de novas capacidades, e no meio de seus trabalhos,
   ele renomeou a technologia para Form Interpreter, nomeclatura
   que perdurou por apenas um mês. Depois sua tecnologia foi
   renomeada novamente para Personal Homepage Constructor Kit
   para abranger a implementação de novas capacidades. Nessa
   época, a tecnologia utilizava comandos das linguagens C e pearl,
   porém nessa época, sua tecnologia ainda não podia ser chamada
   de linguagem de programção, estando mais para um kit de construção
   de ferramenta para web sites.

 - Em 1996, Rasmus lançou o PHP 2.0 que nomeou como PHP/FI (Personal
   Home Page with Form Interpreter) que já tinha integração com Banco
   de dados e utilização de cookies. Porém Rasmus ainda era o único
   desenvolvedor da tecnologia. Também 1996, Rasmus ele então decidiu
   transformar o PHP em uma tecnologia de código aberto, assim poderia
   receber apoio da comunidade para a contínua evolução da tecnologia.

 - Uma das maiores contribuição para a tecnologia surgiu em 1997, através
   de dois estudantes Israelenses (Andi Gutmans e Zeev Suraski). Desse
   ano até 1998, os dois resstruturaram e reescreveram o PHP, mudando
   a estrutura e transformando a tecnologia em um linguagem de programação.
   Após a reestruturação, acrônimo PHP passou a representar  o nome
   'PHP: Hypertext Preprocessor'. ainda em 1998, dois artistas
   participaram da nova cara do PHP, Colin Viebrock e Vincent Pontier.
   colin criou a icônica log do PHP e vincent foi o responsável pelo
   simpático Mascote da linguagem (elefante).

 - Os dois estudantes Israelenses, criaram em 1999, uma empresa que
   focaria seus esforços na manutenção e atualização da linguagem.
   Juntando as iniciais de seus nomes, ciraram assim netão a Zend,
   empresa que até hoje continua por trás das versões mais atuais do
   PHP, incluindo o Zend engine que roda por trás da linguagem.

 - Desde a criação da Zend engine, o PHP continuou crescendo, surgindo
   as versões 4.0 até a 8.0, sendo pulada a versão 6.0. Rasmus deixou
   de participar da construção da linguagem e seguiu trabalhando na
   área em outras empresas.


Por que o mascote é um Elefante?

 - Tudo começou com uma ideia de Vincent Pontier, escrevendo a
   palavra elefante em inglês da seguinte forma elePHPant. Mas
   segundo ele, a própria palavra PHP, visualmente lembra um
   elefante. A ideia pegou e assim o PHP ganhou seu pesado e
   simpático mascote.


Versões do PHP:

 - 1.0: Lançado em 1995.
     - Personal Home Page
     - Funcionalidades simples para sites básicos
     - Não tinha características de uma linguagem de Programação

 - 2.0: Lançado em 1997.
     - Oficialmente nomeado como PHP/FI
     - Linguagem Standalone
     - Recursos Limitados

 - 3.0: Lançado em 1998.
     - Primeira versão colaborativa
     - Características mais relacionadas a uma liguagem de programação
     - Extension APIs

 - 4.0: Lançado em 2000.
     - Zend Engine 1.0
     - Melhoria de performance
     - Aumento da modularização
     - Conceitos de Super globais ($_GET, $_POST, $_SESSION)

 - 5.0: Lançado em 2004.
     - Zend Engine 2.0
     - Orienração a Objetos
     - PHP Data Objects (PDO)
     - Operador de exponenciação
     - Suporte a JSON
     - Namespaces, closures, garbage collection, exceptions handling
     - Novo depurador (phpdbg)

     * Problemas de segurança e performance

     * Nos anos seguintes existiu a promessa da versão 6.0, com
     aumento da segurança e performance e adição de suporte a 
     unicode. Porém a versão 6.0 nunca teve uma release oficial.

 - 7.0: Lançado em 2015.
     - Zend Engine 3.0
     - Performance até 9x maior que a versão 5.7
     - Escape de código Unicode
     - Operador de null coalescing (??)
     - Declaração Escalar
     - Operador spaceship (<=>)
     - Classes Anonimas
     - Excessões mais modernas
     - Retorno Void
     - Libsodium
     - Foreign function interface

 - 8.0: Lançado em 2020.
     - Zend Engine 4.0
     - Just-in-time compilation
     - Locale-independent number convertions
     - Named arguments
     - Expressão Match
     - Operador nullsafe
     - Enumerations (ENUM)
     - Readonly properties (POO)
     - Fibers


Ainda vale a pena Estudar PHP?

 - Todas as linguagens um dia irão morrer.
 - Não é por isso que devemos evitar aprender uma linguagem.

 - As principais estatisticas de uso da linguagem demonstram
   que a versão mais atual esta sempre em constante evolução
   e aumento na adesão de programadores na comunidade.

 - O uso da linguagem se mantém constante e em um nível mais
   alto até que muitas tecnologias consideradas mais atuais.

 - Muitas empresas utilizam o PHP em seus projetos na atualidade.
 - Muitos projetos antigos e atuais utilizam o PHP.


Como funciona o PHP?

 - Trabalha em conjunto com HTML, CSS a Javascript.

 - Nomeclaturas Client-side e Server-side:

   - Client: Dispositivo usado para acessar um serviço
     * Usado pelos usuários dos serviços

   - Server: Computador onde a estrutura base do serviço esta
     implementada.

   - Client-side: Modelo de arquitetura onde os arquivos que
     compõe o software web são enviados para o client sem
     um processamento prévio no proprio servidor.

   - Server-side: Modelo de arquitetura onde os arquivos que
     compõe o software web são gerados após um processamento
     interno do servidor, envolvendo chamdas de apis, consultas
     em bancos de dados e outras operações, tendo como resultado
     o conjunto de arquivos resultantes que por sua vez são enviados
     para o client.
 
 - Nomeclaturas Frontend e backend:

   - Desenvolvedor frontend é o profissional focado em
     desenvolver o software que será enviado para o client,
     como HTML, CSS e Javascript.

   - Desenvolvedor backend é o profissional focado em
     desenvolver o software que roda no servidor e que
     consulta banco de dados, apis e que pode retornar
     arquivos para o client ou apenas servir dados para
     o client.

 O PHP é uma linguagem server-side que roda dentro do servidor
 como visto acima. Ele é responsável por realizar o processamento
 dos dados recebidos do client, consultar bancos de dados, consumir
 APIs e a partir do seu processamento, entregar arquivos HTML, CSS e
 Javascript para o client como resultado final, o que é conhecido como
 Server-side-rendering.

 O PHP também pode trabalhar com APIs Rest, aonde ele disponibiliza
 um endereço Web (url) para uma API que recebe dados e retorna dados
 para um outro servidor ou client totalmente a parte do PHP, nesse
 caso, o PHP não retorna os arquivos HTML, CSS e Js, mas sim os dados
 requisitados, pois os arquivos web em si foram dispobilizados por
 outro servidor.


É possível criar tudo em PHP?

 - PHP é uma linguagem de programação server-side voltada para
   criação de softwares no lado do servidor em soluções  Web.

 - Não é a uma linguagem voltada para o desenvolvimento client-side
   ou para soluções desktop ou embarcada.

 - O melhor resultado usando PHP vai ser obtido no desenvolvimento
   web no lado do servidor, qualquer outro uso, até é possível, mas
   não foi pra isso que a linguagem foi criada.


Pre-processamento

 O PHP é uma linguagem que é pre-processada no servidor,
 de forma que toda o código escrito em PHP será lido,
 interpretado e processado dentro do servidor, onde será
 obtido um resultado a partir desse processamento. Esse
 resultado é o que será enviado para o cliente.

 Ou seja, o código PHP nunca é enviado para o cliente.
 Somente o código HTML, CSS e Javascript são enviados.
 
 Então, em uma aplicação PHP, no momento que ocorre uma
 requisição do cliente, o servidor irá preparar os códigos
 HTML, CSS e Javascript que estão fora das declarações
 PHP e irá deixa-los prontos para serme enviados. Enquanto
 o código PHP será processado ainda no servidor e somente
 quando todo o processamento tiver sido consluído é que
 o conjunto todo é enviado ao cliente, contendo agora os
 códigos já prontos mais o código gerado pelo resultado do
 PHP.
